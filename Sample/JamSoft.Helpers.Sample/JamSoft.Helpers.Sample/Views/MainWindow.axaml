<reactiveUi:ReactiveWindow x:TypeArguments="vm:MainWindowSampleAppViewModel" xmlns="https://github.com/avaloniaui"
                           xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                           xmlns:vm="using:JamSoft.Helpers.Sample.ViewModels"
                           xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                           xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                           xmlns:reactiveUi="http://reactiveui.net"
                           xmlns:converters="clr-namespace:JamSoft.Helpers.Sample.Converters"
                           mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
                           x:Class="JamSoft.Helpers.Sample.Views.MainWindow"
                           Icon="/Assets/avalonia-logo.ico"
                           Title="JamSoft.Helpers.Sample"
                           Padding="20">

    <Design.DataContext>
        <!-- This only sets the DataContext for the previewer in an IDE,
             to set the actual DataContext for runtime, set the DataContext property in code (look at App.axaml.cs) -->
        <vm:MainWindowSampleAppViewModel/>
    </Design.DataContext>

    <Grid RowDefinitions="Auto, *">
        
        <StackPanel Orientation="Horizontal" Spacing="20">
            <Border Classes="ButtonGroupBorder">
                <Button x:Name="LoadPeopleButton">Load People</Button>
            </Border>
            <Border Classes="ButtonGroupBorder">
                <Button x:Name="ValidatePeopleButton">Check IsDirty</Button>
            </Border>
            <Border Classes="ButtonGroupBorder">
                <StackPanel Orientation="Horizontal" Spacing="20">
                    <Button x:Name="ValidatePropertiesButton">Start Tracking Properties</Button>
                    <Button x:Name="ReValidatePropertiesButton">Recheck Properties</Button>
                </StackPanel>
            </Border>
        </StackPanel>
        
        <DataGrid x:Name="PeopleGrid" Grid.Row="1" AutoGenerateColumns="False" Margin="0,20">
            <DataGrid.Resources>
                <converters:IsDirtyColorConverter x:Key="IsDirtyColorConverter"/>
                <converters:MemberInfoConverter x:Key="MemberInfoConverter"/>
            </DataGrid.Resources>
            <DataGrid.Columns>
                <DataGridTextColumn Header="Name" Binding="{Binding Name}" />
                <DataGridTextColumn Header="Address 1" Binding="{Binding AddressLine1}" />
                <DataGridTextColumn Header="Address 2" Binding="{Binding AddressLine2}" />
                <DataGridTextColumn Header="City" Binding="{Binding City}" />
                <DataGridTextColumn Header="Post Zip Code" Binding="{Binding PostZipCode}" />
                <DataGridTextColumn Header="Phone Number" Binding="{Binding PhoneNumber}" />
                <DataGridTextColumn Header="Some Field" Binding="{Binding SomeField}" />
                
                <DataGridCheckBoxColumn Header="Is Dirty?" Binding="{Binding IsDirty}" />
                <DataGridTextColumn Header="Hash" Binding="{Binding Hash}" />
                <DataGridTextColumn Header="Changed Properties" Binding="{Binding ChangedProperties, Converter={StaticResource MemberInfoConverter}, Mode=OneWay}" />
            </DataGrid.Columns>
            <DataGrid.Styles>
                <Style Selector="DataGridCell">
                    <Setter Property="Background" 
                            Value="{Binding IsDirty, Converter={StaticResource IsDirtyColorConverter}}" />
                </Style>
            </DataGrid.Styles>            
        </DataGrid>
    </Grid>

</reactiveUi:ReactiveWindow>
